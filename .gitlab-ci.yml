# Windows Runner
.windows_runners:
  # Used to select runners from the list of available runners. A runner must have all tags listed here to run the job.
  tags:
    - shared-windows
    - windows
    - windows-1809

# Groups jobs into stages. All jobs in one stage must complete before next stage is executed.
stages:
  - build
  - sign

# Defines environment variables globally. Job level property overrides global variables
variables:
  PROJECT_NAME: "HelloWorld"
  PROJECT_VERSION: "0.0.1"
  DOTNET_VERSION: "3.1"
  ENVIRONMENT_NAME: "TEST"

# Below is the definition of your job to build dll artifact
build-dotnet:
  # Define what stage the job will run in.
  stage: build
  # Full name of the image that should be used. It should contain the Registry part if needed.
  image: mcr.microsoft.com/dotnet/sdk:3.1-bullseye
  # Defines scripts that should run *before* the job. Can be set globally or per job.
  before_script:
    # Created directories for artifacts
    - mkdir -p ${CI_PROJECT_DIR}/artifacts
    - mkdir -p ${CI_PROJECT_DIR}/packages
  # Shell scripts executed by the Runner. Build DLL artifact
  script:
    # Build dotnet project with Release configuration
    - dotnet build ${PROJECT_NAME}.csproj -c Release
    # Copy built artifacts to artifacts directory
    - cp bin/Release/netcoreapp${DOTNET_VERSION}/${PROJECT_NAME}-${PROJECT_VERSION}.dll ${CI_PROJECT_DIR}/packages/${PROJECT_NAME}.dll
  # Used to specify a list of files and directories that should be attached to the job if it succeeds.
  artifacts:
    paths:
      # Save artifact in order to use signing job
      - ${CI_PROJECT_DIR}/packages/HelloWorld.dll
    expire_in: 5 minutes

# Below is the definition of your job to sign dll artifact
sign-dotnet-artifacts:
  # Define what stage the job will run in.
  stage: sign
  # Full name of the image that should be used. It should contain the Registry part if needed.
  image: docker:19.03.0
  # Similar to `image` property, but will link the specified services to the `image` container.
  services:
    - docker:19.03.0-dind
  # Defines environment variables for specific jobs.
  variables:
    COMMAND: "sign"
  # Defines scripts that should run *before* the job. Can be set globally or per job.
  before_script:
    # Created directories for signed artifacts
    - mkdir -p ${CI_PROJECT_DIR}/artifacts
    - mkdir -p ${CI_PROJECT_DIR}/packages
  # Shell scripts executed by the Runner. Sign dotnet dll artifact with CodeSignTool Docker Image
  script:
    # Docker Pull CodeSigner Docker Image
    - docker pull ghcr.io/sslcom/codesigner:latest
    # Sign artifact with CodeSigner docker image
    - docker run -i --rm --dns 8.8.8.8 --network host --volume ${CI_PROJECT_DIR}/packages:/codesign/examples --volume ${CI_PROJECT_DIR}/artifacts:/codesign/output 
      -e USERNAME=${USERNAME} -e PASSWORD=${PASSWORD} -e CREDENTIAL_ID=${CREDENTIAL_ID} -e TOTP_SECRET=${TOTP_SECRET} -e ENVIRONMENT_NAME=${ENVIRONMENT_NAME} 
      ghcr.io/sslcom/codesigner:latest ${COMMAND} -input_file_path=/codesign/examples/${PROJECT_NAME}.dll -output_dir_path=/codesign/output
  # Used to specify a list of files and directories that should be attached to the job if it succeeds.
  artifacts:
    paths:
      # Save signed artifact for downloading
      - ${CI_PROJECT_DIR}/artifacts/${PROJECT_NAME}.dll
    expire_in: 1 days
  # Specify a list of job names from earlier stages from which artifacts should be loaded
  dependencies:
    - build-dotnet
